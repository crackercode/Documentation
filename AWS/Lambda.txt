Serverless == FaaS (Function as a Service)
Ex : Amazon S3, DynamoDB, Fargate, Lambda

Serverless does not mean there are no servers. 
it means you just don’t manage / provision / see them

EC2
	Virtual Servers in the Cloud
	Limited by RAM and CPU
	Continuously running
	Scaling means intervention to add / remove servers

AWS Lambda
	Virtual functions – no servers to manage
	Limited by time - short executions
	Run on-demand
	Scaling is automated

Benefits of AWS Lambda
	Easy Pricing Pay per request and compute time
	Integrated with the whole AWS suite of services
	Event-Driven: functions get invoked by AWS when needed
	Integrated with many programming languages Node.js (JavaScript), Python, Java
	Easy monitoring through AWS CloudWatch
	Easy to get more resources per functions(up to 10GB of RAM)
	Increasing RAM will also improve CPU and network
	
CloudWatch Events - EventBridge - Serverless CRON Job
	Triger event periodically
	
Lambda is Serverless, Function as a Service, seamless scaling, reactive
Lambda Billing: By the time run x by the RAM provisionedm, By the number of invocations
Invocation time: up to 15 minutes
Use cases:
	Create Thumbnails for images uploaded onto S3
	Run a Serverless cron job
	API Gateway: expose Lambda functions as HTTP API